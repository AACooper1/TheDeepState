// <auto-generated />
using System;
using DeepState.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeepState.Data.Migrations
{
    [DbContext(typeof(GuildUserRecordContext))]
    [Migration("20220203232326_AddUserRecordLastActive")]
    partial class AddUserRecordLastActive
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeepState.Data.Models.UserRecord", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscordGuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordUserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("LastTimePosted")
                        .HasColumnType("datetime2");

                    b.Property<double>("LibcraftCoinBalance")
                        .HasColumnType("float");

                    b.Property<int>("TableFlipCount")
                        .HasColumnType("int");

                    b.Property<bool>("TimeOut")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("UserRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
